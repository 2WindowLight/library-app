plugins { // 플러그인을 추가할 수 있다.
	// 이 플러그인의 역할 - 1. 스프링을 빌드했을 때 실행가능한 jar 파일이 나오게 도와준다.
	// 2. 스프링 애플리케이션을 실행할 수 있게 도와주고
	// 3. 또다른 플러그인들이 잘 적용될 수 있게 해준다.
	id 'org.springframework.boot' version '3.3.2'
	// 외부 라이브러리, 프레임워크의 버전관리에 도움을 주고 서로 얽혀 있는 의존성을 처리하는데 도와준다.
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	// java 프로젝트를 개발하는데 필요한 기능들을 추가해주고, 다른 JVM 언어 gradle 플러그인을 사용할 수 있는 기반을 마련
	id 'java'
}

// 프로젝트의 그룹, 빌드 결과물에 프로젝트 그룹에 대한 정보가 들어 있다.
group = 'com.example'
// 프로젝트의 버전 - jar 파일로 들어있던 라이브러리 앱과 jar 사이에 들어있던 0.0.1 스냅샷
version = '0.0.1-SNAPSHOT'
// jdk 버전
sourceCompatibility = '17'

repositories { // 외부 라이브러리/프레임워크를 가져오는 장소 설정
	mavenCentral()	// maven 중앙 저장소로부터 가져옴
}
// 우리가 사용하는 라이브러리/르에임워크를 표시하는 곳
dependencies {
	// implementation - 해당 의존성을 항시 사용한다.
	// runtimeOnly - 코드를 실행할 때에만 의존성을 사용한다.
	// spring-boot-starter-data-jpa - JPA를 스프링과 함께 사용하기 위해 필효한 모든 것
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// 톰캣이라거나 다양한 웹 어노태이션이 들어 있는 것
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'com.h2database:h2'
	implementation 'com.mysql:mysql-connector-j:8.3.0'
	// 테스트 코드를 컴파일 하거나 실행시킬 때 항시 사용한다.
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// lombok 의존성 추가
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly "org.springframework.boot:spring-boot-properties-migrator"
}
tasks.named('test'){
	useJUnitPlatform()
}

