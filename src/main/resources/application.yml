spring:
  config:
    activate:
      on-profile: local # 이렇게 되면 이 구분선 위에 여기 들어간 옵션들은 로컬일 때만 동작하게 된다
  datasource: # 데이터 베이스를 H2 Database 쓰게 할 거니까 데이터 소스를 정의
    url: "jdbc:h2:mem:library;MODE=MYSQL;NON_KEYWORDS=USER" # NON_KEYWORDS=USER - sql을 기본적으로 실행하게 되면 유저라는 키워드가 예약된 키워드로
    # 유저 테이블을 못만드는데 유저라는건 키워드가 아니야 라고 알려주도록 한다. -> 이렇게 해야 유저 테이블을 만듦
    username: "sa"
    password: "Ll9711266!!"
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      #H2DB 는 어차피 데이터가 항상 사라지기 때문에 그냥 테이블을 그때 그때 서버가 켜질 때 만들어 주도록 한다.
      ddl-auto: create
    properties:
      hibernate:
        # JPA 를 사용해 DB에 SQL 을 날릴 때 SQL 을 보여줄 것인가
        show_sql: true
        # sql을 보여줄때 예쁘게 포매팅할 것인가
        format_sql: true
        # dialect - 이 옵션으로 DB를 특정하면 조금씩 다른 SQL 을 수정해준다. ex maria sql, post sql .....
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true # h2 콘솔에 접속할 수 있게 한다는 의미
      path: /h2-console


---
spring:
  config:
    activate:
      on-profile: dev
  # 아래 있는 설정들은 특정 프로파일에서 실행된다.
  datasource:   # 스프링 부트가 어떠한 데이터베이스를 가리킬 것인가
    url: "jdbc:mysql://localhost/library" # jdbc - 자바 데이터베이스 커넥터를 사용하는데 종류는 mysql - 데이터베이스는 컴퓨터 호스트 / 사용할 데이터 베이스는 library
    username: "root"
    password: "Ll9711266!!"
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      # 스프링이 시작할 때 DB에 있는 테이블을 어떻게 처리할지/ 매핑하는 코드가 잘못 됐을때 어떻게 처리할지
      # ddl-auto: create - 기존 테이블이 있다면 삭제 후 다시 생성
      # create-drop - 스프링이 종료될 때 테이블을 모두 제거 update - 객체와 테이블이 다른 부분만 변경
      # validate - 객체와 테이블이 동일한지 확인 / none - 별다른 조치를 하지 않는다.
      ddl-auto: none # MySQL 을 쓸때는 직접 DDL을 사용해서 JPA 맵핑된 테이블을 만들어 주었다.
      properties:
        hibernate:
          # JPA 를 사용해 DB에 SQL 을 날릴 때 SQL 을 보여줄 것인가
          show_sql: true
          # sql을 보여줄때 예쁘게 포매팅할 것인가
          format_sql: true
          # dialect - 이 옵션으로 DB를 특정하면 조금씩 다른 SQL 을 수정해준다. ex maria sql, post sql .....
          dialect: org.hibernate.dialect.MySQL8Dialect
